<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>端口敲门（Port Knocking）教程</title>
      <link href="/2025/05/07/knockd/"/>
      <url>/2025/05/07/knockd/</url>
      
        <content type="html"><![CDATA[<h1 id="端口敲门（Port-Knocking）脚本"><a href="#端口敲门（Port-Knocking）脚本" class="headerlink" title="端口敲门（Port Knocking）脚本"></a>端口敲门（Port Knocking）脚本</h1><h2 id="什么是端口敲门？"><a href="#什么是端口敲门？" class="headerlink" title="什么是端口敲门？"></a>什么是端口敲门？</h2><p>端口敲门是一种网络安全技术，通过按特定顺序”敲击”一系列端口，才能打开目标端口的访问权限。这就像是一种密码锁，只有知道正确的”敲门”顺序，才能获得访问权限。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>脚本接受两个主要参数：</p><ul><li><code>-allow</code>：要保护的端口（想要最终访问的端口）</li><li><code>-knowk</code>：敲门端口序列（按顺序敲击的端口）</li></ul><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash knockers.sh -allow 22 -knowk 88,99,33,44</span><br></pre></td></tr></table></figure><p>这个命令表示：</p><ul><li>保护SSH端口（22）</li><li>需要按顺序敲击 88→99→33→44 这四个端口才能获得SSH访问权限</li></ul><h2 id="脚本源码"><a href="#脚本源码" class="headerlink" title="脚本源码"></a>脚本源码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">##author：wangsendi</span></span><br><span class="line"><span class="comment">##url：https://www.yuque.com/wangsendi</span></span><br><span class="line"><span class="comment">###端口敲门   __help中使用方法 allow 是要访问的端口  knowk 是敲门端口 依次敲门就行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认值</span></span><br><span class="line">_allow=<span class="literal">false</span></span><br><span class="line">_knowk=<span class="literal">false</span></span><br><span class="line">_allow_values=<span class="string">&quot;&quot;</span></span><br><span class="line">_knowk_values=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析参数</span></span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$#</span> -gt 0 ]]; <span class="keyword">do</span></span><br><span class="line">    key=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$key</span> <span class="keyword">in</span></span><br><span class="line">    -allow)</span><br><span class="line">        _allow=<span class="literal">true</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        _allow_values=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        ;;</span><br><span class="line">    -knowk)</span><br><span class="line">        _knowk=<span class="literal">true</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        _knowk_values=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="comment"># 对于未知参数，你可以选择忽略或者给出错误信息</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Unknown option: <span class="variable">$1</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="function"><span class="title">__main</span></span>() &#123;</span><br><span class="line">    <span class="comment"># 转换逗号分隔的字符串为数组</span></span><br><span class="line">    <span class="built_in">mapfile</span> -d , -t _allow_ports &lt; &lt;(<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$_allow_values</span>&quot;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="built_in">mapfile</span> -d , -t _knowk_ports &lt; &lt;(<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$_knowk_values</span>&quot;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印参数值</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;allow_ports: <span class="variable">$&#123;_allow_ports[*]&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;knowk_ports: <span class="variable">$&#123;_knowk_ports[*]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#开始执行的通用rule</span></span><br><span class="line">        nft delete table inet portknock</span><br><span class="line">        nft add table inet portknock</span><br><span class="line">        <span class="comment"># 创建链</span></span><br><span class="line">        nft add chain inet portknock input <span class="string">&#x27;&#123; type filter hook input priority -10 ; policy accept ; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">        nft add <span class="built_in">set</span> inet portknock guarded_ports <span class="string">&#x27;&#123; type inet_service; &#125;&#x27;</span></span><br><span class="line">        nft add element inet portknock guarded_ports \&#123; <span class="string">&quot;<span class="variable">$&#123;_allow_values&#125;</span>&quot;</span> \&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义客户端 IPv4 地址集合</span></span><br><span class="line">        nft add <span class="built_in">set</span> inet portknock clients_ipv4 <span class="string">&#x27;&#123; type ipv4_addr; flags timeout; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义客户端 IPv6 地址集合</span></span><br><span class="line">        nft add <span class="built_in">set</span> inet portknock clients_ipv6 <span class="string">&#x27;&#123; type ipv6_addr; flags timeout; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义 IPv4 候选者集合</span></span><br><span class="line">        nft add <span class="built_in">set</span> inet portknock candidates_ipv4 <span class="string">&#x27;&#123; type ipv4_addr . inet_service; flags timeout; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义 IPv6 候选者集合</span></span><br><span class="line">        nft add <span class="built_in">set</span> inet portknock candidates_ipv6 <span class="string">&#x27;&#123; type ipv6_addr . inet_service; flags timeout; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义 input 链</span></span><br><span class="line">        nft add chain inet portknock input <span class="string">&#x27;&#123; type filter hook input priority -10; policy accept; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果是本地回环接口，则返回</span></span><br><span class="line">        nft add rule inet portknock input iifname <span class="string">&quot;lo&quot;</span> <span class="built_in">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;#_knowk_ports[@]&#125;</span>&quot;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">        nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[0]&#125;</span>&quot;</span> add @clients_ipv4 <span class="string">&#x27;&#123; ip saddr timeout 10s &#125;&#x27;</span> <span class="built_in">log</span> prefix <span class="string">&#x27;&quot;Successful portknock: &quot;&#x27;</span></span><br><span class="line">        nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[0]&#125;</span>&quot;</span> add @clients_ipv6 <span class="string">&#x27;&#123; ip6 saddr timeout 10s &#125;&#x27;</span> <span class="built_in">log</span> prefix <span class="string">&#x27;&quot;Successful portknock: &quot;&#x27;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> $(<span class="built_in">seq</span> 0 $((<span class="variable">$&#123;#_knowk_ports[@]&#125;</span> - <span class="number">1</span>))); <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$&#123;item&#125;</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">            0)</span><br><span class="line">                nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[$item]&#125;</span>&quot;</span> add @candidates_ipv4 \&#123; ip saddr . <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[item + 1]&#125;</span>&quot;</span> <span class="built_in">timeout</span> 10s \&#125;</span><br><span class="line">                nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[$item]&#125;</span>&quot;</span> add @candidates_ipv6 \&#123; ip6 saddr . <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[item + 1]&#125;</span>&quot;</span> <span class="built_in">timeout</span> 10s \&#125;</span><br><span class="line">                ;;</span><br><span class="line">            <span class="string">&quot;<span class="subst">$(($&#123;#_knowk_ports[@]&#125; - 1)</span>)&quot;</span>)</span><br><span class="line">                nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[$item]&#125;</span>&quot;</span> ip saddr . tcp dport @candidates_ipv4 add @clients_ipv4 <span class="string">&#x27;&#123; ip saddr timeout 10s &#125;&#x27;</span> <span class="built_in">log</span> prefix <span class="string">&#x27;&quot;Successful portknock: &quot;&#x27;</span></span><br><span class="line">                nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[$item]&#125;</span>&quot;</span> ip6 saddr . tcp dport @candidates_ipv6 add @clients_ipv6 <span class="string">&#x27;&#123; ip6 saddr timeout 10s &#125;&#x27;</span> <span class="built_in">log</span> prefix <span class="string">&#x27;&quot;Successful portknock: &quot;&#x27;</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[$item]&#125;</span>&quot;</span> ip saddr . tcp dport @candidates_ipv4 add @candidates_ipv4 \&#123; ip saddr . <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[item + 1]&#125;</span>&quot;</span> <span class="built_in">timeout</span> 10s \&#125;</span><br><span class="line">                nft add rule inet portknock input tcp dport <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[$item]&#125;</span>&quot;</span> ip6 saddr . tcp dport @candidates_ipv6 add @candidates_ipv6 \&#123; ip6 saddr . <span class="string">&quot;<span class="variable">$&#123;_knowk_ports[item + 1]&#125;</span>&quot;</span> <span class="built_in">timeout</span> 10s \&#125;</span><br><span class="line">                ;;</span><br><span class="line">            <span class="keyword">esac</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"># 保护规则</span></span><br><span class="line">        nft add rule inet portknock input tcp dport @guarded_ports ip saddr @clients_ipv4 counter accept</span><br><span class="line">        nft add rule inet portknock input tcp dport @guarded_ports ip6 saddr @clients_ipv6 counter accept</span><br><span class="line">        nft add rule inet portknock input tcp dport @guarded_ports ct state established,related counter accept</span><br><span class="line">        nft add rule inet portknock input tcp dport @guarded_ports counter reject with tcp reset</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">__main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">__help</span></span>() &#123;</span><br><span class="line">    bash /apps/data/workspace/default/shell/knockers/knockers.sh -allow 22 -knowk 88,99,33,44</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工作原理简介"><a href="#工作原理简介" class="headerlink" title="工作原理简介"></a>工作原理简介</h2><ol><li>脚本创建一个nftables防火墙表和规则集</li><li>设置受保护的端口（如SSH 22端口）</li><li>定义”敲门”顺序（如 88→99→33→44）</li><li>当客户端按正确顺序敲击这些端口时，其IP地址会被临时加入白名单（10秒有效期）</li><li>白名单内的IP可以访问受保护的端口，其他IP则被拒绝</li></ol><h2 id="实际应用场景"><a href="#实际应用场景" class="headerlink" title="实际应用场景"></a>实际应用场景</h2><p>此脚本适合用于保护服务器的敏感端口（如SSH）不被随意扫描和暴力破解。即使攻击者知道你的SSH端口，没有正确的”敲门”序列也无法连接。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>同时支持IPv4和IPv6</li><li>可设置单个或多个敲门端口</li><li>白名单有超时机制，增强安全性</li><li>成功敲门会记录日志</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/02/23/hello-world/"/>
      <url>/2025/02/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
